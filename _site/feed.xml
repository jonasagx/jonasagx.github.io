<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-04-23T21:52:49-07:00</updated><id>http://localhost:4000/</id><title type="html">Posting in the wind</title><subtitle>what you see is all there is
</subtitle><entry><title type="html">WYSIATI - What you see is all there is</title><link href="http://localhost:4000/think/2017/01/09/WYSIATI.html" rel="alternate" type="text/html" title="WYSIATI - What you see is all there is" /><published>2017-01-09T09:41:32-08:00</published><updated>2017-01-09T09:41:32-08:00</updated><id>http://localhost:4000/think/2017/01/09/WYSIATI</id><content type="html" xml:base="http://localhost:4000/think/2017/01/09/WYSIATI.html">&lt;p&gt;&lt;em&gt;What you see is all there is&lt;/em&gt; was introduced (to me) in the book  &lt;em&gt;Thinking fast and slow&lt;/em&gt; by Daniel Kahneman. The author talks about the idea that humans are good making sense of information even when the information available it not enough. It means I am pretty bad telling what I don’t know on some matter, like deciding if I should vote for politician A or B.&lt;/p&gt;

&lt;p&gt;“It is the consistency of the information that matters for a good story, not its completeness.”&lt;/p&gt;

&lt;p&gt;Picture this: I am in a restaurant and say the food in the menu is all there is to eat in the whole world. It’s crazy and is everywhere because it is human bias. It makes me think &lt;em&gt;how can I pay more attention to what I don’t know?&lt;/em&gt; also &lt;em&gt;when am I making things up with what I have in front of me?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Have a good Monday,
Jonas&lt;/p&gt;</content><author><name></name></author><summary type="html">What you see is all there is was introduced (to me) in the book Thinking fast and slow by Daniel Kahneman. The author talks about the idea that humans are good making sense of information even when the information available it not enough. It means I am pretty bad telling what I don’t know on some matter, like deciding if I should vote for politician A or B.</summary></entry><entry><title type="html">Algorithms to Live By - my highlights from the book</title><link href="http://localhost:4000/book/2017/01/09/algorithms-to-live-by.html" rel="alternate" type="text/html" title="Algorithms to Live By - my highlights from the book" /><published>2017-01-09T09:41:32-08:00</published><updated>2017-01-09T09:41:32-08:00</updated><id>http://localhost:4000/book/2017/01/09/algorithms-to-live-by</id><content type="html" xml:base="http://localhost:4000/book/2017/01/09/algorithms-to-live-by.html">&lt;p&gt;It was one of the best books I read in 2016. The connection of computer science and everyday life is fascinating. It resembles a thing I love about math: it’s capacity to describe complex things in a simple and detailed way. I will read this book again and again according to what I am solving in matters of work of life in general.&lt;/p&gt;

&lt;p&gt;Page 2:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;finding an apartment belongs to a class of mathematical problems known as “optimal stopping” problems. The 37% rule defines a simple series of steps—what computer scientists call an “algorithm”—for solving these problems. And as it turns out, apartment hunting is just one of the ways that optimal stopping rears its head in daily life. Committing to or forgoing a succession of options is a structure that appears in life again and again, in slightly different incarnations. How many times to circle the block before pulling into a parking space? How far to push your luck with a risky business venture before cashing out? How long to hold out for a better offer on that house or car?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Page 3:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;They don’t need a therapist; they need an algorithm. The therapist tells them to find the right, comfortable balance between impulsivity and overthinking. The algorithm tells them the balance is thirty-seven percent.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Page 4:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Optimal stopping tells us when to look and when to leap. The explore/exploit tradeoff tells us how to find the balance between trying new things and enjoying our favorites. Sorting theory tells us how (and whether) to arrange our offices. Caching theory tells us how to fill our closets. Scheduling theory tells us how to fill our time.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Page 32:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;exploration is gathering information, and exploitation is using the information you have to get a known good result.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Page 34:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;When balancing favorite experiences and new ones, nothing matters as much as the interval over which we plan to enjoy them. “I’m more likely to try a new restaurant when I move to a city than when I’m leaving it,”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Page 34:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sobering property of trying new things is that the value of exploration, of finding a new favorite, can only go down over time, as the remaining opportunities to savor it dwindle. Discovering an enchanting café on your last night in town doesn’t give you the opportunity to return.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Page 35:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The flip side is that the value of exploitation can only go up over time. The loveliest café that you know about today is, by definition, at least as lovely as the loveliest café you knew about last month. (And if you’ve found another favorite since then, it might just be more so.) So explore when you will have time to use the resulting knowledge, exploit when you’re ready to cash in. The interval makes the strategy.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Page 36:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From a studio’s perspective, a sequel is a movie with a guaranteed fan base: a cash cow, a sure thing, an exploit. And an overload of sure things signals a short-termist approach, as with Stucchio on his way out of town. The sequels are more likely than brand-new movies to be hits this year, but where will the beloved franchises of the future come from? Such a sequel deluge is not only lamentable (certainly critics think so); it’s also somewhat poignant. By entering an almost purely exploit-focused phase, the film industry seems to be signaling a belief that it is near the end of its interval&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">It was one of the best books I read in 2016. The connection of computer science and everyday life is fascinating. It resembles a thing I love about math: it’s capacity to describe complex things in a simple and detailed way. I will read this book again and again according to what I am solving in matters of work of life in general.</summary></entry><entry><title type="html">Lessons learned from someone else</title><link href="http://localhost:4000/learning/2016/03/04/learned-from-someone-else.html" rel="alternate" type="text/html" title="Lessons learned from someone else" /><published>2016-03-04T09:41:32-08:00</published><updated>2016-03-04T09:41:32-08:00</updated><id>http://localhost:4000/learning/2016/03/04/learned-from-someone-else</id><content type="html" xml:base="http://localhost:4000/learning/2016/03/04/learned-from-someone-else.html">&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;even the popular open source products, their documents are still not complete and somewhat hard to understand, and many of solutions searched out are immature and useless.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;copying other people’s examples is a good way to get started, but productivity is from fully understanding how the thing works.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;when learning, you can have a look at other people’s complex work, but you’d better to start simple and build it up knowledge gradually so that you had less chance to spend time on wrong directions.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Original: &lt;a href=&quot;http://mashijie.blogspot.com.br/2015/05/logstash-filter-for-tomcat.html&quot;&gt;Twenty Percent Knowledge&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">even the popular open source products, their documents are still not complete and somewhat hard to understand, and many of solutions searched out are immature and useless.</summary></entry><entry><title type="html">Feary songs — John Keats</title><link href="http://localhost:4000/poem/2016/02/02/feary-songs.html" rel="alternate" type="text/html" title="Feary songs — John Keats" /><published>2016-02-02T09:41:32-08:00</published><updated>2016-02-02T09:41:32-08:00</updated><id>http://localhost:4000/poem/2016/02/02/feary-songs</id><content type="html" xml:base="http://localhost:4000/poem/2016/02/02/feary-songs.html">&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Shed no tear! O shed no tear!
The flower will bloom another year.
Weep no more! O weep no more!
Young buds sleep in the root’s white core.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">Shed no tear! O shed no tear! The flower will bloom another year. Weep no more! O weep no more! Young buds sleep in the root’s white core.</summary></entry></feed>